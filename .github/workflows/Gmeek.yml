name: build Gmeek

on:
  workflow_dispatch:
  issues:
    types: [opened, edited]
  schedule:
    - cron: "0 16 * * *"
    
jobs:
  build:
    name: Generate blog
    runs-on: ubuntu-latest # 使用 ubuntu-latest 以获得更好的兼容性
    if: ${{ github.event.repository.owner.id == github.event.sender.id || github.event_name == 'schedule' }}
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Get config.json
        run: |
          echo "====== check config.json file ======"
          cat config.json
          echo "====== check config.json end ======"
          sudo apt-get install -y jq # 添加 -y 确保自动安装

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      # --- [关键修改] ---
      # 删除了原有的 "Clone source code" 步骤，因为 Checkout 步骤已经把所有文件都准备好了。
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt # 直接使用仓库根目录的依赖文件

      - name: Generate new html
        run: |
          # 直接在当前目录运行脚本，不再需要复制和切换目录
          python Gmeek.py ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} --issue_number '${{ github.event.issue.number }}'
          
      - name: update html
        run: |
          git config --local user.email "$(jq -r ".email" config.json)"
          git config --local user.name "${{ github.repository_owner }}"
          git add .
          git commit -a -m '🎉 auto update by Gmeek action' || echo "nothing to commit"
          git push || echo "nothing to push"
          sleep 3
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/' # 确保路径末尾有斜杠
          
  deploy:
    name: Deploy blog
    runs-on: ubuntu-latest # 使用 ubuntu-latest
    needs: build
    permissions:
      contents: write
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
